/*  =========================================================================
    zm-metric - generated layer of public API

    Copyright (C) 2016 - 2017 Tomas Halman                                 
                                                                           
    This program is free software; you can redistribute it and/or modify   
    it under the terms of the GNU General Public License as published by   
    the Free Software Foundation; either version 2 of the License, or      
    (at your option) any later version.                                    
                                                                           
    This program is distributed in the hope that it will be useful,        
    but WITHOUT ANY WARRANTY; without even the implied warranty of         
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          
    GNU General Public License for more details.                           
                                                                           
    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.            

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
    =========================================================================
*/

#ifndef ZM_METRIC_LIBRARY_H_INCLUDED
#define ZM_METRIC_LIBRARY_H_INCLUDED

//  Set up environment for the application

//  External dependencies
#include <czmq.h>
#include <malamute.h>
#include <zmproto.h>
#include <lua.h>
#include <net-snmp/net-snmp-config.h>

//  ZM_METRIC version macros for compile-time API detection
#define ZM_METRIC_VERSION_MAJOR 1
#define ZM_METRIC_VERSION_MINOR 0
#define ZM_METRIC_VERSION_PATCH 0

#define ZM_METRIC_MAKE_VERSION(major, minor, patch) \
    ((major) * 10000 + (minor) * 100 + (patch))
#define ZM_METRIC_VERSION \
    ZM_METRIC_MAKE_VERSION(ZM_METRIC_VERSION_MAJOR, ZM_METRIC_VERSION_MINOR, ZM_METRIC_VERSION_PATCH)

#if defined (__WINDOWS__)
#   if defined ZM_METRIC_STATIC
#       define ZM_METRIC_EXPORT
#   elif defined ZM_METRIC_INTERNAL_BUILD
#       if defined DLL_EXPORT
#           define ZM_METRIC_EXPORT __declspec(dllexport)
#       else
#           define ZM_METRIC_EXPORT
#       endif
#   elif defined ZM_METRIC_EXPORTS
#       define ZM_METRIC_EXPORT __declspec(dllexport)
#   else
#       define ZM_METRIC_EXPORT __declspec(dllimport)
#   endif
#   define ZM_METRIC_PRIVATE
#else
#   define ZM_METRIC_EXPORT
#   if (defined __GNUC__ && __GNUC__ >= 4) || defined __INTEL_COMPILER
#       define ZM_METRIC_PRIVATE __attribute__ ((visibility ("hidden")))
#   else
#       define ZM_METRIC_PRIVATE
#   endif
#endif

//  Opaque class structures to allow forward references
//  These classes are stable or legacy and built in all releases
typedef struct _zm_metric_server_t zm_metric_server_t;
#define ZM_METRIC_SERVER_T_DEFINED
typedef struct _rule_tester_t rule_tester_t;
#define RULE_TESTER_T_DEFINED


//  Public classes, each with its own header file
#include "zm_metric_server.h"
#include "rule_tester.h"

#ifdef ZM_METRIC_BUILD_DRAFT_API
//  Self test for private classes
ZM_METRIC_EXPORT void
    zm_metric_private_selftest (bool verbose);
#endif // ZM_METRIC_BUILD_DRAFT_API

#endif
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
